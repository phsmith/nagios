#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Description: Check if hosts/ip configured on /etc/hosts are correct configured acordding to a dns server
# Author: Phillipe Smith <phillipelnx@gmail.com>
#
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

from subprocess import Popen, PIPE

# A list with dns servers to search, if not specified default to the system dns server
hostsfile_default_dns_server = None

def inventory_hosts_file(info):
    return [(None, "hostsfile_default_dns_server")]

def check_hosts_file(item, params, info):
    numok     = 0
    numerr    = 0
    errhosts  = ''
    dnsserver = ' '

    for line in info:
        if len(line) == 3:
            ipaddr = line[0]
            name   = line[2].split('.')[0]

            if params and params is not None:
                dnsserver = ' '.join(['@' + server for server in params])

            hostbyip   = Popen(['dig', '+short', '-x', ipaddr, dnsserver], stdout=PIPE).communicate()[0].split()
            hostbyname = Popen(['dig', '+short', '+search', name, dnsserver], stdout=PIPE).communicate()[0].split()

            if len(hostbyname) == 2:
                hostbyname[0] = hostbyname[1]
            
            if hostbyname and ipaddr != hostbyname[0]:
                numerr += 1
                errhosts += '%s (IP on /etc/hosts differ from dns server to the hostname: %s)\\n' % (ipaddr, name) 
            elif hostbyip and name not in hostbyip[0]:
                numerr += 1
                errhosts += '%s (the IP on dns responds to %s not %s which is on /etc/hosts)\\n' % (ipaddr, hostbyip[0], name)
            elif not hostbyip and not hostbyname:
                numerr += 1
                errhosts += '%s (not found)\\n' % ipaddr
            else:
                numok += 1       

    if numerr > 0:
        status   = 2
        infotext = 'CRIT - %s host(s) with DNS problem.\\n%s' % (numerr, errhosts)
    else:
        status = 0
        infotext = 'OK - All the %d host(s) on /etc/hosts are fine. ' % numok

    return (status, infotext)   

check_info['hosts_file'] = {
    "inventory_function"  : inventory_hosts_file,
    "check_function"      : check_hosts_file,
    "service_description" : 'Hosts File DNS',
    "has_perfdata"        : False,
}

